"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from midday.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class CreateTransactionsAttachmentTypedDict(TypedDict):
    path: List[str]
    r"""Path(s) of the attachment file(s)."""
    name: str
    r"""Name of the attachment file."""
    size: float
    r"""Size of the attachment file in bytes."""
    type: str
    r"""MIME type of the attachment file."""


class CreateTransactionsAttachment(BaseModel):
    path: List[str]
    r"""Path(s) of the attachment file(s)."""

    name: str
    r"""Name of the attachment file."""

    size: float
    r"""Size of the attachment file in bytes."""

    type: str
    r"""MIME type of the attachment file."""


class RequestBodyTypedDict(TypedDict):
    name: str
    r"""Name of the transaction."""
    amount: float
    r"""Amount of the transaction."""
    currency: str
    r"""Currency of the transaction."""
    date_: str
    r"""Date of the transaction (ISO 8601)."""
    bank_account_id: str
    r"""Bank account ID associated with the transaction."""
    assigned_id: NotRequired[str]
    r"""Assigned user ID for the transaction."""
    category_slug: NotRequired[str]
    r"""Category slug for the transaction."""
    note: NotRequired[str]
    r"""Note for the transaction."""
    internal: NotRequired[bool]
    r"""Whether the transaction is internal."""
    attachments: NotRequired[List[CreateTransactionsAttachmentTypedDict]]
    r"""Array of attachments for the transaction."""


class RequestBody(BaseModel):
    name: str
    r"""Name of the transaction."""

    amount: float
    r"""Amount of the transaction."""

    currency: str
    r"""Currency of the transaction."""

    date_: Annotated[str, pydantic.Field(alias="date")]
    r"""Date of the transaction (ISO 8601)."""

    bank_account_id: Annotated[str, pydantic.Field(alias="bankAccountId")]
    r"""Bank account ID associated with the transaction."""

    assigned_id: Annotated[Optional[str], pydantic.Field(alias="assignedId")] = None
    r"""Assigned user ID for the transaction."""

    category_slug: Annotated[Optional[str], pydantic.Field(alias="categorySlug")] = None
    r"""Category slug for the transaction."""

    note: Optional[str] = None
    r"""Note for the transaction."""

    internal: Optional[bool] = None
    r"""Whether the transaction is internal."""

    attachments: Optional[List[CreateTransactionsAttachment]] = None
    r"""Array of attachments for the transaction."""
