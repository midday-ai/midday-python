"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .trackerprojectresponse import (
    TrackerProjectResponse,
    TrackerProjectResponseTypedDict,
)
from midday.types import BaseModel
import pydantic
from typing import List
from typing_extensions import Annotated, TypedDict


class TrackerProjectsResponseMetaTypedDict(TypedDict):
    r"""Pagination metadata for the projects response"""

    has_next_page: bool
    r"""Whether there are more projects available on the next page"""
    has_previous_page: bool
    r"""Whether there are more projects available on the previous page"""


class TrackerProjectsResponseMeta(BaseModel):
    r"""Pagination metadata for the projects response"""

    has_next_page: Annotated[bool, pydantic.Field(alias="hasNextPage")]
    r"""Whether there are more projects available on the next page"""

    has_previous_page: Annotated[bool, pydantic.Field(alias="hasPreviousPage")]
    r"""Whether there are more projects available on the previous page"""


class TrackerProjectsResponseTypedDict(TypedDict):
    meta: TrackerProjectsResponseMetaTypedDict
    r"""Pagination metadata for the projects response"""
    data: List[TrackerProjectResponseTypedDict]
    r"""Array of tracker projects matching the query criteria"""


class TrackerProjectsResponse(BaseModel):
    meta: TrackerProjectsResponseMeta
    r"""Pagination metadata for the projects response"""

    data: List[TrackerProjectResponse]
    r"""Array of tracker projects matching the query criteria"""
